{"version":3,"file":"static/webpack/static/development/pages/_app.js.fb36b62f610619e83a16.hot-update.js","sources":["webpack:///./components/Icons/TypescriptIcon.tsx","webpack:///./components/SnippetControls/SnippetControls.tsx"],"sourcesContent":["// **********************************\n// Auto-generated file, do NOT modify\n// **********************************\nimport { createStyledIcon, IconProps } from '@bigcommerce/big-design-icons';\nimport React from 'react';\n\nconst Icon =\n  /*#__PURE__*/\n  React.memo<Partial<IconProps>>(({ title, theme, ...props }) => (\n    <svg\n      height={80}\n      width={80}\n      viewBox=\"0 0 128 128\"\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      {...props}\n    >\n      <title>{title}</title>\n      <path fill=\"#fff\" d=\"M22.67 47h99.67v73.67H22.67z\" />\n      <path\n        fill=\"#007acc\"\n        d=\"M1.5 63.91v62.5h125v-125H1.5zm100.73-5a15.56 15.56 0 017.82 4.5 20.58 20.58 0 013 4c0 .16-5.4 3.81-8.69 5.85-.12.08-.6-.44-1.13-1.23a7.09 7.09 0 00-5.87-3.53c-3.79-.26-6.23 1.73-6.21 5a4.58 4.58 0 00.54 2.34c.83 1.73 2.38 2.76 7.24 4.86 8.95 3.85 12.78 6.39 15.16 10 2.66 4 3.25 10.46 1.45 15.24-2 5.2-6.9 8.73-13.83 9.9a38.32 38.32 0 01-9.52-.1 23 23 0 01-12.72-6.63c-1.15-1.27-3.39-4.58-3.25-4.82a9.34 9.34 0 011.15-.73L82 101l3.59-2.08.75 1.11a16.78 16.78 0 004.74 4.54c4 2.1 9.46 1.81 12.16-.62a5.43 5.43 0 00.69-6.92c-1-1.39-3-2.56-8.59-5-6.45-2.78-9.23-4.5-11.77-7.24a16.48 16.48 0 01-3.43-6.25 25 25 0 01-.22-8c1.33-6.23 6-10.58 12.82-11.87a31.66 31.66 0 019.49.26zm-29.34 5.24v5.12H56.66v46.23H45.15V69.26H28.88v-5a49.19 49.19 0 01.12-5.17C29.08 59 39 59 51 59h21.83z\"\n        data-name=\"original\"\n      />\n    </svg>\n  ));\n\nexport const TypescriptIcon =\n  /*#__PURE__*/\n  createStyledIcon(Icon);\n","import { Button, Flex, Small } from '@bigcommerce/big-design';\nimport { AssignmentIcon, CheckIcon, InvertColorsIcon, RestoreIcon } from '@bigcommerce/big-design-icons';\nimport React, { useContext, useState } from 'react';\n\nimport { JavascriptIcon } from '../Icons/JavascriptIcon';\nimport { TypescriptIcon } from '../Icons/TypescriptIcon';\nimport { CodeEditorContext } from '../StoryWrapper/StoryWrapper';\n\nimport { StyledFlex } from './styled';\n\ninterface SnippetControls {\n  helperText?: string;\n  copyToClipboard(): void;\n  resetCode?(): void;\n}\n\nfunction getCopyToClipboardIcon(isCopying: boolean) {\n  return isCopying ? (\n    <CheckIcon title=\"Copying\" color=\"success\" />\n  ) : (\n    <AssignmentIcon title=\"Copy\" color=\"secondary60\" />\n  );\n}\n\nfunction onCopy(setIsCopying: (copying: boolean) => void, copyToClipboard: () => void) {\n  setIsCopying(true);\n  copyToClipboard();\n\n  setTimeout(() => {\n    setIsCopying(false);\n  }, 1000);\n}\n\nexport const SnippetControls: React.FC<SnippetControls> = props => {\n  const { copyToClipboard, helperText, resetCode } = props;\n  const [isCopying, setIsCopying] = useState(false);\n  const { toggleTheme: toggleEditorTheme } = useContext(CodeEditorContext);\n\n  return (\n    <StyledFlex\n      borderBottom=\"box\"\n      backgroundColor=\"secondary20\"\n      justifyContent=\"flex-end\"\n      alignItems=\"center\"\n      style={{ zIndex: 999 }}\n    >\n      <Flex.Item flexGrow={1}>\n        <Small marginHorizontal=\"small\">{helperText}</Small>\n      </Flex.Item>\n\n      <Flex.Item borderLeft=\"box\">\n        <Button\n          iconOnly={<TypescriptIcon />}\n          variant=\"subtle\"\n          onClick={() => onCopy(setIsCopying, copyToClipboard)}\n        />\n      </Flex.Item>\n\n      <Flex.Item borderLeft=\"box\">\n        <Button\n          iconOnly={<JavascriptIcon />}\n          variant=\"subtle\"\n          onClick={() => onCopy(setIsCopying, copyToClipboard)}\n        />\n      </Flex.Item>\n\n      <Flex.Item borderLeft=\"box\">\n        <Button\n          iconOnly={getCopyToClipboardIcon(isCopying)}\n          variant=\"subtle\"\n          onClick={() => onCopy(setIsCopying, copyToClipboard)}\n          disabled={isCopying}\n        />\n      </Flex.Item>\n      {resetCode && (\n        <Flex.Item borderLeft=\"box\">\n          <Button iconOnly={<RestoreIcon title=\"Reset\" color=\"secondary60\" />} variant=\"subtle\" onClick={resetCode} />\n        </Flex.Item>\n      )}\n      <Flex.Item borderLeft=\"box\">\n        <Button\n          iconOnly={<InvertColorsIcon title=\"Toggle Theme\" color=\"secondary60\" />}\n          variant=\"subtle\"\n          onClick={toggleEditorTheme}\n        />\n      </Flex.Item>\n    </StyledFlex>\n  );\n};\n\nSnippetControls.defaultProps = {\n  helperText: 'Edit the code below to see your changes live!',\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAoBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AADA;;;;A","sourceRoot":""}