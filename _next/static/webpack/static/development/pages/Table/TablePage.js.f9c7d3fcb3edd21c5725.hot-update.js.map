{"version":3,"file":"static/webpack/static/development/pages/Table/TablePage.js.f9c7d3fcb3edd21c5725.hot-update.js","sources":["webpack:///./components/StoryWrapper/StoryWrapper.tsx"],"sourcesContent":["import { Panel } from '@bigcommerce/big-design';\nimport { PrismTheme } from 'prism-react-renderer';\nimport { default as lightTheme } from 'prism-react-renderer/themes/github';\nimport { default as darkTheme } from 'prism-react-renderer/themes/oceanicNext';\nimport React, { createContext, useState } from 'react';\n\ntype Language = 'jsx' | 'tsx';\n\ninterface Context {\n  theme: PrismTheme;\n  language: Language;\n  setLanguage(language: Language): void;\n  toggleTheme(): void;\n}\n\nexport const CodeEditorContext = createContext<Context>({\n  language: 'tsx',\n  theme: darkTheme,\n  // tslint:disable-next-line: no-empty\n  setLanguage: () => {},\n  // tslint:disable-next-line: no-empty\n  toggleTheme: () => {},\n});\n\nexport const StoryWrapper: React.FC = props => {\n  const [editorTheme, setEditorTheme] = useState(darkTheme);\n  const [language, setLanguage] = useState<Language>('tsx');\n  const toggleEditorTheme = () => setEditorTheme(editorTheme === darkTheme ? lightTheme : darkTheme);\n\n  return (\n    <Panel>\n      <CodeEditorContext.Provider value={{ theme: editorTheme, toggleTheme: toggleEditorTheme, language, setLanguage }}>\n        {props.children}\n      </CodeEditorContext.Provider>\n    </Panel>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}