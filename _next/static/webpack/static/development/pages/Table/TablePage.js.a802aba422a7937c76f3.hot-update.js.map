{"version":3,"file":"static/webpack/static/development/pages/Table/TablePage.js.a802aba422a7937c76f3.hot-update.js","sources":["webpack:///./pages/Table/TablePage.tsx"],"sourcesContent":["import { H0, H1, Table, TableItem, Text } from '@bigcommerce/big-design';\nimport React from 'react';\n\nimport { CodePreview } from '../../components';\nimport {\n  TableColumnsPropTable,\n  TablePropTable,\n  TableSelectablePropTable,\n  TableSortablePropTable,\n} from '../../PropTables';\n\ninterface Item extends TableItem {\n  sku: string;\n  name: string;\n  stock: number;\n}\n\nconst data: Item[] = [\n  { sku: 'ABS', name: '[Sample] Able Brewing System', stock: 225 },\n  { sku: 'CC3C', name: '[Sample] Chemex Coffeemaker 3 cup', stock: 49 },\n  { sku: 'CGLD', name: '[Sample] Laundry Detergent', stock: 29 },\n  { sku: 'CLC', name: '[Sample] Canvas Laundry Cart', stock: 2 },\n  { sku: 'DPB', name: '[Sample] Dustpan & Brush', stock: 34 },\n  { sku: 'OCG', name: '[Sample] Oak Cheese Grater', stock: 34 },\n  { sku: 'OFSUC', name: '[Sample] Utility Caddy', stock: 45 },\n];\n\nconst columns = [\n  { header: 'Sku', hash: 'sku', render: ({ sku }) => sku },\n  { header: 'Name', hash: 'name', render: ({ name }) => name },\n  { header: 'Stock', hash: 'stocck', render: ({ stock }) => stock },\n];\n\nconst sort = (items, columnHash, direction) => {\n  return items\n    .concat()\n    .sort((a, b) =>\n      direction === 'ASC' ? (a[columnHash] >= b[columnHash] ? 1 : -1) : a[columnHash] <= b[columnHash] ? 1 : -1,\n    );\n};\n\nexport default () => {\n  return (\n    <>\n      <H0>Table</H0>\n\n      <CodePreview>\n{`<Table\n  columns={[\n    { header: 'Sku', hash: 'sku', render: ({ sku }) => sku },\n    { header: 'Name', hash: 'name', render: ({ name }) => name },\n    { header: 'Stock', hash: 'stock', render: ({ stock }) => stock },\n  ]}\n  items={[\n    { sku: 'SM13', name: '[Sample] Smith Journal 13', stock: 25 },\n    { sku: 'DPB', name: '[Sample] Dustpan & Brush', stock: 34 },\n    { sku: 'OFSUC', name: '[Sample] Utility Caddy', stock: 45 },\n    { sku: 'CLC', name: '[Sample] Canvas Laundry Cart', stock: 2 },\n    { sku: 'CGLD', name: '[Sample] Laundry Detergent', stock: 29 },\n  ]}\n  stickyHeader\n/>`}\n      </CodePreview>\n\n      <H1>API</H1>\n      <TablePropTable />\n      <TableColumnsPropTable id=\"table-columns-prop-table\" />\n      <TableSelectablePropTable id=\"table-selectable-prop-table\" />\n      <TableSortablePropTable id=\"table-sortable-prop-table\" />\n\n      <H1>Usage with selectable</H1>\n\n      <CodePreview scope={{ data, columns }}>\n{`function Example() {\n  const [selectedItems, setSelectedItems] = React.useState<Item[]>([]);\n\n  return (\n    <Table\n      keyField=\"sku\"\n      columns={columns}\n      items={data}\n      itemName=\"Products\"\n      selectable={{\n        selectedItems,\n        onSelectionChange: setSelectedItems,\n      }}\n    />\n  );\n}`}\n      </CodePreview>\n\n      <H1>Usage with pagination</H1>\n\n      <CodePreview scope={{ data, columns }}>\n{`function Example() {\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [itemsPerPageOptions] = React.useState([5, 10, 20, 30]);\n  const [itemsPerPage, setItemsPerPage] = React.useState(5);\n  const [currentItems, setCurrentItems] = React.useState([]);\n\n  const onItemsPerPageChange = newRange => {\n    setCurrentPage(1);\n    setItemsPerPage(newRange);\n  };\n\n  React.useEffect(() => {\n    const maxItems = currentPage * itemsPerPage;\n    const lastItem = Math.min(maxItems, data.length);\n    const firstItem = Math.max(0, maxItems - itemsPerPage);\n\n    // @ts-ignore\n    setCurrentItems(data.slice(firstItem, lastItem));\n  }, [currentPage, data, itemsPerPage]);\n\n  return (\n    <Table\n      keyField=\"sku\"\n      columns={columns}\n      items={currentItems}\n      itemName=\"Products\"\n      pagination={{\n        currentPage,\n        totalItems: data.length,\n        onPageChange: setCurrentPage,\n        itemsPerPageOptions,\n        onItemsPerPageChange,\n        itemsPerPage,\n      }}\n      stickyHeader\n    />\n  );\n}`}\n      </CodePreview>\n      <H1>Usage with sortable</H1>\n\n      <CodePreview scope={{ data, columns, sort }}>\n{`function Example() {\n  const [items, setItems] = React.useState(data);\n  const [columnHash, setColumnHash] = React.useState('');\n  const [direction, setDirection] = React.useState<'ASC' | 'DESC'>('ASC');\n\n  const onSort = (newColumnHash, newDirection) => {\n    setColumnHash(newColumnHash);\n    setDirection(newDirection);\n    setItems(currentItems => sort(currentItems, newColumnHash, newDirection));\n  };\n\n  return (\n    <Table\n      keyField=\"sku\"\n      columns={[\n        { header: 'Sku', hash: 'sku', render: ({ sku }) => sku, isSortable: true },\n        { header: 'Name', hash: 'name', render: ({ name }) => name, isSortable: true },\n        { header: 'Stock', hash: 'stocck', render: ({ stock }) => stock, isSortable: true },\n      ]}\n      items={items}\n      itemName=\"Products\"\n      sortable={{\n        columnHash,\n        direction,\n        onSort,\n      }}\n    />\n  );\n}`}\n      </CodePreview>\n\n      <H1>Customization Example</H1>\n\n      <CodePreview>\n{`<Table\n  columns={[\n    { header: 'Sku', hash: 'sku', render: ({ sku }) => sku },\n    {\n      header: 'Name',\n      hash: 'name',\n      render: ({ name }) => name,\n      align: 'center',\n    },\n    {\n      header: 'Stock',\n      hash: 'stock',\n      render: ({ stock }) =>\n        stock > 5 ? <Text color=\"success\">{stock}</Text> : <Text color=\"danger\">{stock}</Text>,\n    },\n  ]}\n  items={[\n    { sku: 'SM13', name: '[Sample] Smith Journal 13', stock: 25 },\n    { sku: 'DPB', name: '[Sample] Dustpan & Brush', stock: 34 },\n    { sku: 'OFSUC', name: '[Sample] Utility Caddy', stock: 45 },\n    { sku: 'CLC', name: '[Sample] Canvas Laundry Cart', stock: 2 },\n    { sku: 'CGLD', name: '[Sample] Laundry Detergent', stock: 29 },\n  ]}\n/>`}\n      </CodePreview>\n    </>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAaA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;;;;A","sourceRoot":""}